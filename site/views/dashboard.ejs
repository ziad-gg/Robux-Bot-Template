<html lang=en><meta charset=utf-8><meta content="width=device-width,initial-scale=1"name=viewport><meta content=https://cdn.discordapp.com/attachments/1116475279012003931/1120062108873281676/robux.png property=og:image><link href=../themes/main.css rel=stylesheet><link href="https://fonts.googleapis.com/css?family=Fira+Sans:400,500,600"rel=stylesheet><meta content="The Robux Bot Dashboard is a web-based interface that provides users with convenient access and control over various features and functionalities of a Robux bot. This dashboard serves as a centralized hub where users can manage their Robux balances, perform transfers, view group information, and interact with the bot's commands."name=og:description><meta content="The Robux Bot Dashboard is a web-based interface that provides users with convenient access and control over various features and functionalities of a Robux bot. This dashboard serves as a centralized hub where users can manage their Robux balances, perform transfers, view group information, and interact with the bot's commands."name=description><link href=https://cdnjs.cloudflare.com/ajax/libs/open-iconic/1.1.1/font/css/open-iconic-bootstrap.min.css rel=stylesheet><link href=https://cdn.jsdelivr.net/gh/hung1001/font-awesome-pro@0ac23ca/css/all.css rel=stylesheet><link href=https://cdn.discordapp.com/attachments/1116475279012003931/1120062108873281676/robux.png rel=icon type=image/png><link href=https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css rel=stylesheet crossorigin=anonymous integrity=sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65><title><%= title %></title><header class="border-bottom navbar navbar-expand-lg navbar-light"><div class=container-fluid><a class="text-light fs-6 navbar-brand side-line"href=#><%= client.user.username%></a><div class="border border-secondary p-1 position-absolute rounded-pill start-50 top-50 translate-middle"id=navbarSupportedContent style=min-height:2rem!important><ul class=navbar-nav><li class=nav-item><a class="text-light nav-link active"href="/" aria-current=page>Home</a><li class=nav-item><a class="text-light nav-link"href=/commands>Commands</a><li class=nav-item><a class="text-light nav-link"href=/dashboard>Tranfer</a><li class=nav-item><a class="nav-link disabled text-muted"href=# aria-disabled=true tabindex=-1>Support</a></ul></div><div class="d-flex align-items-center"><img alt="User Avatar"class="me-2 rounded-circle"src="https://cdn.discordapp.com/avatars/<%= profile.id %>/<%= profile.avatar %>"style=width:40px;height:40px> <span class=text-light><%= profile.username%></span></div></div></header><main class="container-fluid pt-5 pt-5 bd-highlight d-flex flex-column main-section"><div class="end-0 p-3 position-fixed toast-container top-0"><div class=toast class=bg-success id=liveToast role=alert aria-atomic=true aria-live=assertive><div class=toast-header><strong class=me-auto>successfully</strong> <small class=text-muted>just now</small> <button class=btn-close type=button data-bs-dismiss=toast aria-label=Close></button></div><div class=toast-body id=ToastMessage>Hello, world! This is a toast message.</div></div></div><div class=container><div class=row><div class=col-md-4><div class="box box-group-name"><h5><i class="fas box-icon fa-users"></i>Group Name</h5><p class=box-value><%= group.name %></div><div class="box box-group-fund"><h5><i class="fas box-icon fa-dollar-sign"></i>Group Funds</h5><p class=box-value><%= group.funds %></div><div class="box box-group-link"><h5><i class="fas box-icon fa-link"></i>Group Link</h5><p class=box-value><a class=text-decoration-none href="<%= group.link %>"><%= group.name %></a></div><div class="box box-group-coming-funds"><h5><i class="fas box-icon fa-arrow-up"></i>Group Coming Funds</h5><p class=box-value>$<%= group.pending %></div></div><div class=col-md-4><div class="box box-user-balance"><h5><i class="fas box-icon fa-wallet"></i>User Balance</h5><p class=box-value id=balance>$<%= user.balance %></div><div class="box box-user-robux"><h5><i class="fas box-icon fa-coins"></i>User Total Buyed Robux</h5><p class=box-value>$<%= user.buyedTotal %></div><div class="box box-user-transfer"><h5><i class="fas box-icon fa-exchange-alt"></i>User Last Transfer Account</h5><p class=box-value id=lastAccount><%= user.lastTransactionsAccount ?? "None" %></div></div><div class=col-md-4><div class="box box-guild-id"><h5><i class="fas box-icon fa-id-card"></i>Recipient ID</h5><p class=box-value><%= recipientId %></div><div class="box box-guild-owner"><h5><i class="fas box-icon fa-user"></i>Recipient Name</h5><p class=box-value><%= recipientName %></div><div class="box box-guild-robux-price"><h5><i class="fas box-icon fa-dollar-sign"></i>Guild Robux Price</h5><p class=box-value>$<%= data.price %></div><div class="box box-transfer-coins"><h5><i class="fas box-icon fa-exchange-alt"></i>Transfer Balance to Robux</h5><button class="btn btn-primary btn-transfer"type=button data-bs-target=#transferModal data-bs-toggle=modal>Transfer</button></div></div></div></div></main><footer class="border-top footer mt-auto py-3"><div class="container text-center"><span class=text-muted>Discord Bot Dashboard (Ziath | Slayver) Â© 2023</span></div></footer><div class="fade modal"id=transferModal aria-hidden=true aria-labelledby=transferModalLabel tabindex=-1><div class="modal-dialog modal-dialog-centered"><div class="text-light bg-dark modal-content"><div class=modal-header><h5 class=modal-title id=transferModalLabel>Transfer Balance</h5><button class="btn-close bg-light close"type=button data-bs-dismiss=modal aria-label=Close></button></div><div class=modal-body><form><div class=mb-3><label class=form-label for=usernameInput><i class="fas fa-user"></i> Username</label> <input class=form-control id=usernameInput placeholder="Enter username"autocomplete=off></div><div class=mb-3><label class=form-label for=amountInput><i class="fas fa-coins"></i> Amount</label> <input class=form-control id=amountInput placeholder="Enter amount"oninput=remainingBalance() type=number></div><div class=mb-3><label class=form-label for=balanceOutput>Remaining Balance</label><output class=form-control id=balanceOutput></output><div class="alert alert-danger d-none mt-2"id=transferError role=alert></div></div></form></div><div class=modal-footer><button class="btn btn-secondary"type=button data-bs-dismiss=modal>Cancel</button> <button class="btn btn-primary"type=button id=transferButton>Transfer</button></div></div></div></div><script crossorigin=anonymous src=https://kit.fontawesome.com/your-fontawesome-kit.js></script><script crossorigin=anonymous src=https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js integrity=sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3></script><script crossorigin=anonymous src=https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js integrity=sha384-cuYeSxntonz0PPNlHhBs68uyIAVpIIOZZ5JqeqvYYIcEL727kskC66kF92t6Xl2V></script><script crossorigin=anonymous src=https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js integrity=sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM></script><script crossorigin=anonymous src=https://code.jquery.com/jquery-3.7.0.min.js integrity="sha256-2Pmvv0kuTBOenSvLm6bvfBSSHrUJ+3A7x6P5Ebd07/g="></script><script>const transferButton = document.getElementById('transferButton');
    const usernameInput = document.getElementById('usernameInput');
    const amountInput = document.getElementById('amountInput');
    const transferError = document.getElementById('transferError');

    transferButton.addEventListener('click', () => {
      const username = usernameInput.value;
      const amount = amountInput.value;
      
      const currentBalance = document.getElementById('balance');
      const balance =  parseFloat(currentBalance.innerText.slice(1))

      transferError.classList.add('d-none');
      
      if (username === '' || amount === '') {
        transferError.innerText = 'Username and amount cannot be empty.';
        transferError.classList.remove('d-none');
      } else if (amount > balance) {
        transferError.innerText = 'Your Balance Is not enough';
        transferError.classList.remove('d-none');
      } else {
        transferCoinsToRobux(username, amount, currentBalance);
      }
    });
    
    function transferCoinsToRobux(username, amount, currentBalance) {
      
      const apiUrl = 'https://bot-robux.glitch.me/api/transfer';
      const params = new URLSearchParams({
        username: username,
        id:<%= profile.id%>,
        amount: +amount
      });

      const urlWithParams = `${apiUrl}?${params}`;

      const transferButton = document.getElementById('transferButton');
      transferButton.disabled = true;

      fetch(urlWithParams, { method: 'POST' })
      .then(response => response.json())
      .then(data => {
        
        if (data.error) {
          transferError.innerText = data.message;
          transferError.classList.remove('d-none');
          transferButton.disabled = false;
        } else if (data.done) {
          const toastLiveExample = document.getElementById('liveToast');
          const ToastMessage = document.getElementById('ToastMessage');
          const LastAccount = document.getElementById('lastAccount');   
          const toast = new bootstrap.Toast(toastLiveExample);
          
          ToastMessage.innerText = 'The robux has been successfully transfered to ' + username;
          currentBalance.innerText = '$'+ data.user.balance;
          LastAccount.innerText = username;
          
          $("#transferModal .close").click();
          toast.show();
        };
      });
    };
    
    function remainingBalance() {
      const amountInput = document.getElementById('amountInput');
      const balanceOutput = document.getElementById('balanceOutput');
      const transferButton = document.getElementById('transferButton');
      const transferError = document.getElementById('transferError');

      const currentBalance = document.getElementById('balance');
      const balance =  parseFloat(currentBalance.innerText.slice(1))
      const transferAmount = parseFloat(amountInput.value) || 0;
      const calculatedBalance = parseFloat(currentBalance.innerText.slice(1)) - transferAmount;

      balanceOutput.value = calculatedBalance;

      if (transferAmount <= 0) {
        transferButton.disabled = true;
        transferError.innerText = 'Transfer amount must be greater than zero.';
        transferError.classList.remove('d-none');
      } else if (transferAmount > balance) {
        transferButton.disabled = true;
        transferError.innerText = "You don't have enough balance.";
        transferError.classList.remove('d-none');
      } else {
        transferButton.disabled = false;
        transferError.classList.add('d-none');
      }
    }</script>